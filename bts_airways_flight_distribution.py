# -*- coding: utf-8 -*-
"""BTS_airways_flight_distribution.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MH1yZjsKPD_KBWAZpdIC9Cwv1-c2FWTt
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from glob import glob

# Visualization
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
import plotly.graph_objects as go
from plotly.subplots import make_subplots

df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/BTS_Data_2018_2024.csv')
df.head()

df1 = df[['Month', 'FlightDate','Flight_Number_Operating_Airline', 'Tail_Number', 'IATA_Code_Operating_Airline', 'Origin', 'OriginCityName', 'OriginStateName', 'Dest', 'DestCityName', 'DestStateName']].copy()
df1.head()

operating_airline_dir = {'WN' : 'Southwest Airlines Co', 'AA' : 'American Airlines Inc.', 'DL' : 'Delta Air Lines Inc.', 'UA' : 'United Air Lines Inc.', 'OO' : 'SkyWest Airlines Inc.', 'YX' : 'Republic Airline',
'MQ' : 'Simmons Airlines', 'NK' : 'Spirit Air Lines', 'B6' : 'JetBlue Airways', 'AS' : 'Alaska Airlines Inc.', '9E' : 'Endeavor Air Inc.', 'OH' : 'Comair Inc.', 'F9' : 'Frontier Airlines Inc.',
'G4' : 'Allegiant Air','PT' : 'Piedmont Airlines', 'YV' : 'Mesa Airlines Inc.', 'HA' : 'Hawaiian Airlines Inc.', 'C5' : 'CommuteAir LLC dba CommuteAir', 'QX': 'Horizon Air',
'G7' : 'GoJet Airlines LLC d/b/a United Express', 'ZW' : 'Air Wisconsin Airlines Corp'}

print(operating_airline_dir)

#value = {i for i in operating_airline_dir if operating_airline_dir[i]=="G7"}
print(operating_airline_dir['WN'])

def operating_airline_func(value):
        ret_value = operating_airline_dir[value]
        return str(ret_value)

df1['operating_airline'] = df1['IATA_Code_Operating_Airline'].map(operating_airline_func)
display(df1.head())

df1.isnull().sum()

df1.nunique()

#frequency of each unique values in operating airlines
Operating_Airline = df1['operating_airline'].value_counts()
Operating_Airline

Operating_Airline.plot.bar()

print(Operating_Airline.index)
print()
print(Operating_Airline.values)

#data plotting RGB(255, 255, 255)
Operating_Airline.plot.bar()
#Operating_Airline.plot.bar(color=['green', 'yellow', 'purple', 'blue', 'lightblue', 'teal', 'lightgreen'])
#Operating_Airline.plot.bar(color=['#9a6c35', '#a47a49', '#ae895d', '#b89871', '#c2a685', '#ccb59a', '#d6c4ae', '#e0d2c2', '#eae1d6', '#f4f0ea', '#e9b0f9', '#d19ee0', '#ba8cc7', '#a37bae', '#8b6995', '#c58940', '#e5b972', '#f9e9b0'])

plt.figure(figsize=(20,7))
sns.countplot(x="operating_airline", hue="Flight_Number_Operating_Airline",  data=df1)
plt.xticks(rotation=90)
plt.show()

df1["Flight_Number_Operating_Airline"].plot(
    kind="hist", bins=30, title="Total Flights data"
)
plt.show()

print(df['Year'].dtype)
# Assuming df is your DataFrame and 'date_column' is the column you want to convert
df['FlightDate'] = pd.to_datetime(df['FlightDate'])
print(df['FlightDate'].dtype)

df["Flight_Number_Operating_Airline"] = df['FlightDate'].dt.year
df["Flight_Number_Operating_Airline"].value_counts().sort_index().plot(
    kind="bar", figsize=(10, 5), title="Scheduled Flights Per Month"
)
plt.show()

#Bivariate Analysis
for group in df1.groupby('IATA_Code_Operating_Airline')['Flight_Number_Operating_Airline']:
  print(group)

df1.groupby('IATA_Code_Operating_Airline')['Flight_Number_Operating_Airline'].mean()

df1[['IATA_Code_Operating_Airline','Flight_Number_Operating_Airline']].groupby(['Flight_Number_Operating_Airline']).count().plot()
plt.show()

#Average , minimum & maximum flight details
df1.groupby('IATA_Code_Operating_Airline')['Flight_Number_Operating_Airline'].agg(['mean','min','max'])

df1.isna().sum()

df1.shape

pd.crosstab(df1['IATA_Code_Operating_Airline'] , df1['Origin']).plot.bar(legend=False)

#frequency of each unique values in operating airlines
Origin_airport = df1['Origin'].value_counts()
Origin_airport

df1['Origin'].unique()

df1['Origin'].value_counts()

df2 = df1.loc[((df1["Origin"] == 'SEA') & (df1["Dest"] == "EWR"))]
df3 = df1.loc[((df1["Origin"] == 'ATL') & (df1["Dest"] == "DEN"))]
df4 = df1.loc[((df1["Origin"] == 'IAD') & (df1["Dest"] == "JFK"))]
#df3 = df1.loc[df1["Origin"] == 'EWR']
#df4 = df1.loc[df1["Origin"] == 'ATL']
#df5 = df1.loc[df1["Origin"] == 'DEN']
frames = [df2,df3, df4]
#df2.shape
test_df = pd.concat(frames)
test_df.shape
#display(test_df)

test_df.head()

test_df['Origin'].value_counts()

test_df['Dest'].value_counts()

plt.figure(figsize=(20,7))
test_df['Dest'].value_counts().plot.bar()

pd.crosstab(test_df['operating_airline'] , test_df['Origin']).plot.bar()

test_df = test_df.drop("FlightDate",axis=1)
#test_df = test_df.drop("DayofMonth",axis=1) #Converted to date

plt.figure(figsize=(28,15))
pd.crosstab(test_df['Origin'] , test_df['Dest']).plot.bar(legend=False)

#data plotting

#airport_1 = df1[df1['Origin'] == df1['Origin'][0]]
airport_1 = df1[df1['Origin'] == 'IAD']
airport_1.head()
#airport_1.shape
#airport_1.isna().sum()
#df1['Origin'][1]
#df1.Origin[0].plot.bar()

org_airport1 = airport_1['Origin'].value_counts()
org_airport1

plt.figure(figsize=(20,7))
sns.countplot(x="OriginCityName", hue="operating_airline",  data=airport_1)
plt.xticks(rotation=0)
plt.show()

plt.figure(figsize=(20,7))
airport_1['operating_airline'].value_counts().plot.bar(rot=45)

airlines = df1['IATA_Code_Operating_Airline'].unique()
print(len(airlines))

Operating_airlines_1 = df1[df1['IATA_Code_Operating_Airline'] == df1['IATA_Code_Operating_Airline'][0]]
#airport_1 = df1[df1['Origin'] == 'SEA']
Operating_airlines_2 = df1[df1['IATA_Code_Operating_Airline'] == df1['IATA_Code_Operating_Airline'][1]]
Operating_airlines_1.head()

oper_airline_1 = Operating_airlines['IATA_Code_Operating_Airline'].value_counts()
oper_airline_1

plt.figure(figsize=(20,7))
sns.countplot(x="Origin", hue="IATA_Code_Operating_Airline",  data=Operating_airlines)
plt.xticks(rotation=45)
plt.show()

plt.figure(figsize=(25,7))
sns.countplot(x="Dest", hue="IATA_Code_Operating_Airline",  data=Operating_airlines)
plt.xticks(rotation=90)
plt.show()

plt.figure(figsize=(25,10))

sns.countplot(x="Dest", hue="Origin", data=airport_1)
plt.xticks(rotation=90)
#legend=False
#plt.legend(loc='lower center', title = "Routes")
#plt.legend(bbox_to_anchor=(1.02, 0.15), loc='upper left', borderaxespad=0)
plt.show()

#create scatterplot
plt.figure(figsize=(28,15))
#sns.scatterplot(data=df1, x='Dest', y='Origin', hue='FlightDate')
sns.scatterplot(data=airport_1, x='Dest', y='FlightDate', hue='Origin', legend=False)
#place legend outside bottom right corner of plot
plt.legend(bbox_to_anchor=(1.02, 0.15), loc='upper left', borderaxespad=0)
#scatterplot
plt.show()